#!/bin/bash


 
REPOS="$(ls $pwd)"
BASE_DIR=$(pwd)

. /usr/local/etc/commit/commit.conf
# 시작할 년의 1월 1일 입력
#start_date="20200101"
# 종료될 날 입력
#end_date="20201231"
cur_date="$start_date"
aggregate_commit=

tag_listing(){

echo "Tag List"
git tag --list | awk '{print $1}' | xargs -i echo {}
}

counting_commit(){
local count_commit=
total_commit=0
local val_date=$cur_date
while [[ $val_date -le $end_date ]]
do
        cal_date=$(cal ${val_date:4:2} ${val_date:0:4} | tr -s " " "\n" | tail -1)
        cal_date=`expr $cal_date - 1`
        date_start=$(date -d "$val_date" "+%Y-%m-%d")
        date_end=$(date -d "$val_date + $cal_date day" "+%Y-%m-%d")
        count_commit=$(git rev-list --count --since=$date_start  --before=$date_end --all $git_option)
        echo "$(date -d "$val_date" "+%b") : $count_commit"
	if [ $count_commit -gt 0 ]; then
        	total_commit=$((total_commit + count_commit))
	fi
  val_date=`date -d "$val_date + 1 month" "+%Y%m%d"`
done
if [ $total_commit -gt 0 ]; then
	aggregate_commit=$((aggregate_commit + total_commit))
fi
echo "Total commit : [$total_commit]"
}


action_opt(){
case ${@:1} in
        1)
        echo "Counting Commit with Merge Commit"
        git_option=
        ;;
        2)
        echo "2"
        tag_opt=2
        ;;
        3)
        echo "3"
        tag_opt=3
        ;;
        *)
        echo "Counting Commit without Merge Commit"
	git_option="--no-merges"
        ;;
esac


}

tag_executor(){
case $tag_opt in 
	1)
	counting_commit
	;;
	2)
	tag_listing
	;;
	3)
	issue_listing
	;;
	*)
	;;
esac
}

issue_listing(){
echo "[Issue List]"
issue_arr=$(gh issue list -s all)
temp_issue_str=""
for words in ${issue_arr[@]};do
temp_issue_str=$(printf "%s $words" "$temp_issue_str")
	if echo $temp_issue_str | grep -Eq '[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) (2[0-3]|[01][0-9]):[0-5][0-9]:[0-5][0-9] \+[0-9][0-9][0-9][0-9] UTC';then
	echo $temp_issue_str
	temp_issue_str=""
	fi
done 

}


echo "Please Select Operation option"
echo -e "[1] : Counting git commit with Merge commit\n\
[2] : Tag List\n\
[3] : Issue List\n\
[*] : Counting git commit without Merge commit"
read gitoption
action_opt $gitoption



for repo in $REPOS
do
    # soft link 일 경우 readlink로 원래의 경로을 구해서 원 경로가 directory이면
    # repo를 원 경로로 변경한다.
    if [ -h "${repo}" ]; then
        nrepo="$(readlink ${repo})"
        [ -d "${nrepo}" ] && repo=${nrepo}
    fi
    if [ -d ${repo} ]; then
	echo "========Count [$repo]========="
	#cd $repo && git pull && if [ -z "$tag_opt" ]; then counting_commit; else  tag_listing; fi && echo "================Done===============" && cd - >& /dev/null
	cd $repo && git pull && tag_executor && echo "================Done===============" && cd - >& /dev/null
    fi	
done


echo "Expected Commit [$aggregate_commit/xxx]"
